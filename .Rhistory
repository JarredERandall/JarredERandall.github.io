setwd("~/GitHub/Portfolio/Portfolio")
quarto render
![Last Updated 05/20/2024](assets/JarredRandall_Resume.png)
html_file_path <- "Projects/Practicum/Watauga-housing.html"
rstudioapi::viewer(html_file_path)
html_file_path <- "Projects/Practicum/Watauga-housing.html"  # Adjust the path accordingly
# Open the HTML file in the RStudio Viewer pane
rstudioapi::viewer(html_file_path)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, results='hide', cache = TRUE)
# install.packages("spatstat", repos="http://cran.r-project.org")
# install.packages("spatstat.explore", repos="http://cran.r-project.org")
# install.packages("FedData", repos="http://cran.r-project.org")
# install.packages("animation", repos="http://cran.r-project.org")
# install.packages("rasterVis", repos="http://cran.r-project.org")
# install.packages("raster", repos="http://cran.r-project.org")
# install.packages("tidyverse", repos="http://cran.r-project.org")
# install.packages("rgdal", repos = "http://cran.r-project.org", type = "source")
# install.packages("tidycensus")
# install.packages("stringi")
# install.packages("sp", repos="http://cran.r-project.org")
# install.packages("kableExtra", repos="http://cran.r-project.org")
# install.packages("systemfonts", repos="http://cran.r-project.org")
# install.packages("highr", repos="http://cran.r-project.org")
# install.packages("jquerylib", repos="http://cran.r-project.org")
# install.packages("sass", repos="http://cran.r-project.org")
# install.packages("cachem", repos="http://cran.r-project.org")
# install.packages("RSocrata", repos="http://cran.r-project.org")
# install.packages("gridExtra", repos="http://cran.r-project.org")
# install.packages("spdep", repos="http://cran.r-project.org")
# install.packages("FNN", repos="http://cran.r-project.org")
# install.packages("grid", repos="http://cran.r-project.org")
# install.packages("kableExtra", repos="http://cran.r-project.org")
# install.packages("classInt", repos="http://cran.r-project.org")
# install.packages("mapview", repos="http://cran.r-project.org")
# install.packages("crosstalk", repos="http://cran.r-project.org")
# install.packages("ggplot2", repos="http://cran.r-project.org")
# install.packages("reshape2", repos="http://cran.r-project.org")
# install.packages("rgdal")
#install.packages('prettydoc')
#install.packages("rmdformats")
library(prettydoc)
library(cli)
library(rlang)
library(RSocrata)
library(viridis)
library(spatstat)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(kableExtra)
library(classInt)   # for KDE and ML risk class intervals
library(mapview)
library(FedData)
library(tidyverse)
library(tidycensus)
library(sf)
library(sp)
library(dplyr)
library(raster)
library(animation)
library(rasterVis)
library(RColorBrewer)
library(ggplot2)
library(colorspace)
library(tidyr)
library(readr)
library(terra)
library(reshape2)
library(yardstick)
library(randomForest)
library(caret)
library(scales)
library(tidymodels)
library(knitr)
library(ggcorrplot)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
color_palette <- c("#e2a334", "#f9bf3e", "#fcd977", "#9ad7d2", "#74c1b9")
options(repos = c(CRAN = "https://cran.rstudio.com/"))
# Install required packages
if (!requireNamespace("rsconnect", quietly = TRUE)) {
install.packages("rsconnect")
}
if (!requireNamespace("rpubs", quietly = TRUE)) {
install.packages("rpubs")
}
# Load the libraries
library(rsconnect)
library(rpubs)
options(repos = c(CRAN = "https://cran.rstudio.com/"))
# Install required package
if (!requireNamespace("rsconnect", quietly = TRUE)) {
install.packages("rsconnect")
}
# Load the library
library(rsconnect)
setwd("~/GitHub/Portfolio")
get(wd)
getwd()
setwd("~/GitHub/Portfolio")
setwd(Projects/Musa_Practicum)
setwd(/Projects/Musa_Practicum)
setwd("/Projects/Musa_Practicum")
setwd("C:/Users/fatbo/OneDrive/Documents/GitHub/Portfolio/Projects/Musa_Practicum")
setwd("~/GitHub/Portfolio")
rsconnect::rpubsUpload(
title = "Public Policy Analytics Final",
contentFile = "C:/Users/fatbo/OneDrive/Documents/GitHub/Portfolio/posts/Fairbnb/Randall_Akharti_Final.html",
originalDoc = NULL
)
## Project Overview
rsconnect::rpubsUpload(
title = "Public Policy Analytics Final",
contentFile = "C:/Users/fatbo/OneDrive/Documents/GitHub/Portfolio/posts/TargetingHousingSubsidy/HW-05_JRandall.html",
originalDoc = NULL
)
```{=html}
install.packages("rmarkdown")
library(rmarkdown)
rsconnect::rpubsUpload(
title = "Flood Prediction Model",
contentFile = "C:/Users/fatbo/OneDrive/Documents/GitHub/Portfolio/posts/EstimatingFlood/Flood_Prediction_Model.html",
originalDoc = NULL
)
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("readxl", "dplyr", "officer", "httr"))
# Load libraries
library(readxl)
library(dplyr)
library(officer)
library(httr)
# Load the data
data <- read_excel("/mnt/data/testemail.xlsx")
data <- read_excel("C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/doc.kml_Point.csv")
data <- read.csv("C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/doc.kml_Point.csv")
data_filtered <- data %>%
select(PARKNAME, Amenity_Type, Rating01, Notes, CITY, ACRES, ADDRESS, PARKTYPE, images)
data_filtered <- data %>%
select(PARKNAME, Amenity_Type, Rating01, Notes, CITY, ACRES, ADDRESS, PARKTYPE, Image)
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Loop over each park
parks <- unique(data_filtered$PARKNAME)
for (park in parks) {
# Filter data by current park
park_data <- data_filtered %>% filter(PARKNAME == park)
# Add Park Name as a header
doc <- doc %>%
body_add_par(park, style = "heading 1")
# Add Amenity Info
for (i in 1:nrow(park_data)) {
doc <- doc %>%
body_add_par(paste("Amenity Type: ", park_data$Amenity_Type[i]), style = "Normal") %>%
body_add_par(paste("Rating: ", park_data$Rating01[i]), style = "Normal") %>%
body_add_par(paste("Notes: ", park_data$Notes[i]), style = "Normal") %>%
body_add_par(paste("City: ", park_data$CITY[i]), style = "Normal") %>%
body_add_par(paste("Acres: ", park_data$ACRES[i]), style = "Normal") %>%
body_add_par(paste("Address: ", park_data$ADDRESS[i]), style = "Normal") %>%
body_add_par(paste("Park Type: ", park_data$PARKTYPE[i]), style = "Normal")
}
# Insert images at the bottom for the park
images <- unlist(strsplit(park_data$images[1], "\\|"))
for (img_name in images) {
# The unique identifier for the image file is typically in the URL path, so use it directly
img_name <- tail(unlist(strsplit(img_name, "/")), 1)
# Construct the full path to the local image
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image file exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_par("Image:", style = "Normal") %>%
body_add_img(img_path, width = 5, height = 4)
}
}
}
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Loop over each park
parks <- unique(data_filtered$PARKNAME)
for (park in parks) {
# Filter data by current park
park_data <- data_filtered %>% filter(PARKNAME == park)
# Add Park Name as a header
doc <- doc %>%
body_add_par(park, style = "heading 1")
# Add Amenity Info
for (i in 1:nrow(park_data)) {
doc <- doc %>%
body_add_par(paste("Amenity Type: ", park_data$Amenity_Type[i]), style = "Normal") %>%
body_add_par(paste("Rating: ", park_data$Rating01[i]), style = "Normal") %>%
body_add_par(paste("Notes: ", park_data$Notes[i]), style = "Normal") %>%
body_add_par(paste("City: ", park_data$CITY[i]), style = "Normal") %>%
body_add_par(paste("Acres: ", park_data$ACRES[i]), style = "Normal") %>%
body_add_par(paste("Address: ", park_data$ADDRESS[i]), style = "Normal") %>%
body_add_par(paste("Park Type: ", park_data$PARKTYPE[i]), style = "Normal")
}
# Insert images at the bottom for the park
images <- unlist(strsplit(park_data$images[1], "\\|"))
for (img_name in images) {
# The unique identifier for the image file is typically in the URL path, so use it directly
img_name <- tail(unlist(strsplit(img_name, "/")), 1)
# Construct the full path to the local image
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image file exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_par("Image:", style = "Normal") %>%
body_add_img(img_path, width = 5, height = 4)
}
}
}
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Loop over each park
parks <- unique(data_filtered$PARKNAME)
# Ensure the Image column is treated as a character type
park_data$Image <- as.character(park_data$Image)
# Insert images at the bottom for the park
images <- unlist(strsplit(park_data$Image[1], "\\|"))
for (img_name in images) {
# The unique identifier for the image file is typically in the URL path, so use it directly
img_name <- tail(unlist(strsplit(img_name, "/")), 1)
# Construct the full path to the local image
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image file exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_par("Image:", style = "Normal") %>%
body_add_img(img_path, width = 5, height = 4)
}
# Save the document
print(doc, target = "Park_Amenities_Report.docx")
getwd()
getwd()
print(doc, target = "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01Park_Amenities_Report.docx")
getwd()
getwd()
print(doc, target = "C:/Users/fatbo/Documents/Park_Amenities_Report.docx")
print(doc, target = "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01Park_Amenities_Report.docx")
# Load required libraries
library(officer)
library(magrittr)
library(dplyr)
# Load the data
data <- read.csv("C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/doc.kml_Point.csv")
# Filter and select necessary columns
data_filtered <- data %>%
select(PARKNAME, Amenity_Type, Rating01, Notes, CITY, ACRES, ADDRESS, PARKTYPE, Image)
# Ensure the Image column is treated as a character type
data_filtered$Image <- as.character(data_filtered$Image)
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Get unique parks
parks <- unique(data_filtered$PARKNAME)
# Loop over each park
for (park in parks) {
# Filter data for the current park
park_data <- data_filtered %>% filter(PARKNAME == park)
# Add park information to the Word document
doc <- doc %>%
body_add_par(paste("Park Name: ", park), style = "heading 1") %>%
body_add_par(paste("City: ", park_data$CITY[1]), style = "Normal") %>%
body_add_par(paste("Acres: ", park_data$ACRES[1]), style = "Normal") %>%
body_add_par(paste("Address: ", park_data$ADDRESS[1]), style = "Normal") %>%
body_add_par(paste("Park Type: ", park_data$PARKTYPE[1]), style = "Normal")
# Add Amenity information
for (i in 1:nrow(park_data)) {
doc <- doc %>%
body_add_par(paste("Amenity Type: ", park_data$Amenity_Type[i]), style = "Normal") %>%
body_add_par(paste("Rating: ", park_data$Rating01[i]), style = "Normal") %>%
body_add_par(paste("Notes: ", park_data$Notes[i]), style = "Normal")
}
# Add images related to the park
images <- unlist(strsplit(park_data$Image[1], "\\|"))
for (img_url in images) {
# Get the unique image identifier from the URL
img_name <- tail(unlist(strsplit(img_url, "/")), 1)
# Construct the full local image path
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_par("Image:", style = "Normal") %>%
body_add_img(img_path, width = 5, height = 4)
}
}
}
# Save the document to the specified location
print(doc, target = "C:/Users/fatbo/Documents/Park_Amenities_Report.docx")
data <- read.csv("C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/doc.kml_Point.csv")
# Filter and select necessary columns
data_filtered <- data %>%
select(PARKNAME, Amenity_Type, Rating01, Notes, CITY, ACRES, ADDRESS, PARKTYPE, Image)
# Ensure the Image column is treated as a character type
data_filtered$Image <- as.character(data_filtered$Image)
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Get unique parks
parks <- unique(data_filtered$PARKNAME)
doc <- read_docx()
# Get unique parks
parks <- unique(data_filtered$PARKNAME)
# Loop over each park
for (park in parks) {
# Filter data for the current park
park_data <- data_filtered %>% filter(PARKNAME == park)
# Add park information to the Word document
doc <- doc %>%
body_add_par(paste("Park Name: ", park), style = "heading 1") %>%
body_add_par(paste("City: ", park_data$CITY[1]), style = "Normal") %>%
body_add_par(paste("Acres: ", park_data$ACRES[1]), style = "Normal") %>%
body_add_par(paste("Address: ", park_data$ADDRESS[1]), style = "Normal") %>%
body_add_par(paste("Park Type: ", park_data$PARKTYPE[1]), style = "Normal")
# Add Amenity information
for (i in 1:nrow(park_data)) {
doc <- doc %>%
body_add_par(paste("Amenity Type: ", park_data$Amenity_Type[i]), style = "Normal") %>%
body_add_par(paste("Rating: ", park_data$Rating01[i]), style = "Normal") %>%
body_add_par(paste("Notes: ", park_data$Notes[i]), style = "Normal")
}
# Add images related to the park
images <- unlist(strsplit(park_data$Image[1], "\\|"))
for (img_url in images) {
# Get the unique image identifier from the URL
img_name <- tail(unlist(strsplit(img_url, "/")), 1)
# Construct the full local image path
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_par("Image:", style = "Normal") %>%
body_add_img(img_path, width = 5, height = 4)
}
}
}
# Save the document to the specified location
print(doc, target = "C:/Users/fatbo/Documents/Park_Amenities_Report.docx")
# Load the data
data <- read.csv("C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/doc.kml_Point.csv")
# Filter and select necessary columns
data_filtered <- data %>%
select(PARKNAME, Amenity_Type, Rating01, Notes, CITY, ACRES, ADDRESS, PARKTYPE, Image)
# Ensure the Image column is treated as a character type
data_filtered$Image <- as.character(data_filtered$Image)
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Get unique parks
parks <- unique(data_filtered$PARKNAME)
# Loop over each park
for (park in parks) {
# Filter data for the current park
park_data <- data_filtered %>% filter(PARKNAME == park)
# Add park information to the Word document
doc <- doc %>%
body_add_par(paste("Park Name: ", park), style = "heading 1") %>%
body_add_par(paste("City: ", park_data$CITY[1]), style = "Normal") %>%
body_add_par(paste("Acres: ", park_data$ACRES[1]), style = "Normal") %>%
body_add_par(paste("Address: ", park_data$ADDRESS[1]), style = "Normal") %>%
body_add_par(paste("Park Type: ", park_data$PARKTYPE[1]), style = "Normal")
# Add Amenity information
for (i in 1:nrow(park_data)) {
doc <- doc %>%
body_add_par(paste("Amenity Type: ", park_data$Amenity_Type[i]), style = "Normal") %>%
body_add_par(paste("Rating: ", park_data$Rating01[i]), style = "Normal") %>%
body_add_par(paste("Notes: ", park_data$Notes[i]), style = "Normal")
}
# Add images related to the park
images <- unlist(strsplit(park_data$Image[1], "\\|"))
for (img_url in images) {
# Get the unique image identifier from the URL
img_name <- tail(unlist(strsplit(img_url, "/")), 1)
# Construct the full local image path
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_par("Image:", style = "Normal") %>%
body_add_img(img_path, width = 5, height = 4)
}
}
}
# Save the document to the specified location
print(doc, target = "C:/Users/fatbo/Documents/Park_Amenities_Report.docx")
View(park_data)
# Load required libraries
library(officer)
library(magrittr)
library(dplyr)
# Load the data
data <- read.csv("C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/doc.kml_Point.csv")
# Filter and select necessary columns
data_filtered <- data %>%
select(PARKNAME, Amenity_Type, Rating01, Notes, CITY, ACRES, ADDRESS, PARKTYPE, Image)
# Ensure the Image column is treated as a character type
data_filtered$Image <- as.character(data_filtered$Image)
# Define the local image path
image_dir <- "C:/Users/fatbo/Downloads/24-00001 - CITY OF COOPER CITY PARKS AND REC_13-Sep-24_09-01/data/images/connectspatial/"
# Create Word document
doc <- read_docx()
# Get unique parks
parks <- unique(data_filtered$PARKNAME)
# Loop over each park
for (park in parks) {
# Filter data for the current park
park_data <- data_filtered %>% filter(PARKNAME == park)
# Add park information to the Word document
doc <- doc %>%
body_add_par(paste("Park Name: ", park), style = "heading 1") %>%
body_add_par(paste("City: ", park_data$CITY[1]), style = "Normal") %>%
body_add_par(paste("Acres: ", park_data$ACRES[1]), style = "Normal") %>%
body_add_par(paste("Address: ", park_data$ADDRESS[1]), style = "Normal") %>%
body_add_par(paste("Park Type: ", park_data$PARKTYPE[1]), style = "Normal")
# Add Amenity information for each amenity in this park
for (i in 1:nrow(park_data)) {
doc <- doc %>%
body_add_par(paste("Amenity Type: ", park_data$Amenity_Type[i]), style = "Normal") %>%
body_add_par(paste("Rating: ", park_data$Rating01[i]), style = "Normal") %>%
body_add_par(paste("Notes: ", park_data$Notes[i]), style = "Normal")
}
# At the end of the park's section, add images related to the park
images <- unlist(strsplit(park_data$Image[1], "\\|"))  # Assuming all rows for the park have the same image list
doc <- doc %>%
body_add_par("Images:", style = "heading 2")  # Add a section for images
# Loop through each image and add it to the document
for (img_url in images) {
# Get the unique image identifier from the URL
img_name <- tail(unlist(strsplit(img_url, "/")), 1)
# Construct the full local image path
img_path <- file.path(image_dir, paste0(img_name, ".jpg"))
# Check if the image exists and add it to the document
if (file.exists(img_path)) {
doc <- doc %>%
body_add_img(img_path, width = 5, height = 4)
} else {
doc <- doc %>%
body_add_par(paste("Image not found: ", img_name), style = "Normal")
}
}
# Add a page break between parks
doc <- doc %>%
body_add_par("", style = "Normal") %>%  # Add empty line
body_add_break()  # Add a page break for the next park
}
# Save the document to the specified location
print(doc, target = "C:/Users/fatbo/Documents/Park_Amenities_Report.docx")
tbo/Documents/Park_Amenities_Report.docx")
print(doc, target = "C:/Users/fatbo/Documents/Park_Amenities_Report.docx")
library(officer)
# Create Word document
doc <- read_docx() %>%
body_add_par("This is a test document.", style = "Normal")
# Save the document
print(doc, target = "C:/Users/fatbo/Documents/test_doc.docx")
print(doc, target = "C:/Users/fatbo/Desktop/test_doc.docx")
setwd("C:/Users/fatbo/Desktop)
print(doc, target = "C:/Users/fatbo/Desktop/test_doc.docx")
setwd("C:/Users/fatbo/Desktop)
print(doc, target = "C:/Users/fatbo/Desktop/test_doc.docx")
print(doc, target ="C:/Users/fatbo/Desktop/test_doc.docx")
